name: release

on:
  push:
    tags:
      - 'v*-release'
  workflow_dispatch:
    inputs:
      tag:
        description: 'New release tag in format "vX.Y.Z-release" (e.g. v1.0.0-release)'
        required: true

permissions:
  contents: write

env:
  CHANGELOG_FILE: CHANGELOG.md
  RELEASE_BRANCH: main
  QUILL_SIGN_P12: ${{ secrets.APPLE_SIGN_P12 }}
  QUILL_NOTARY_ISSUER: ${{ secrets.APPLE_NOTARY_ISSUER }}
  QUILL_NOTARY_KEY_ID: ${{ secrets.APPLE_NOTARY_KEY_ID }}
  QUILL_NOTARY_KEY: ${{ secrets.APPLE_NOTARY_KEY }}

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Set pre-release tag variable
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TAG=${{ github.event.inputs.tag }}
          else
            TAG=${{ github.ref_name }}
          fi
          echo "PRE_RELEASE_TAG=${TAG}" >> $GITHUB_ENV
      - name: Set release tag variable
        run: |
          TAG=$(echo ${{ env.PRE_RELEASE_TAG }} | sed 's/-release$//')
          echo "RELEASE_TAG=${TAG}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure Git and fetch tags
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch --force --tags
      - name: Add and push pre-release tag if workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag ${{ env.PRE_RELEASE_TAG }} HEAD
          git push origin ${{ env.PRE_RELEASE_TAG }}
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Install Quill
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh | sh -s -- -b /usr/local/bin
      - name: Build zeed
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: "~> v2"
          args: build --clean --single-target --id zeed-build-linux-windows --skip=post-hooks -o ./zeed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tempfile for release notes
        id: create_tempfile
        run: |
          tempfile=$(mktemp)
          echo "TEMPFILE=$tempfile" >> $GITHUB_ENV
      - name: Add changelog header
        run: |
          OLD_TAG=$(git tag --list 'v*' | grep -v -- '-.*' | tail -n1)
          DATE=$(date +%Y-%m-%d)
          SEMANTIC_VERSION=$(echo "${{ env.RELEASE_TAG }}" | sed 's/^v//')
          ENTRY=$'\n## ['"${SEMANTIC_VERSION}"'](https://github.com/souhail-5/zeed/compare/'"${OLD_TAG}"'...'"${{ env.RELEASE_TAG }}"') - '"${DATE}"
          ./zeed add --text "${ENTRY}" --channel header
      - name: Update Unreleased URL
        run: |
          sed -i "s|\(Unreleased.*souhail-5/zeed/compare/\).*|\1${{ env.RELEASE_TAG }}...main)|" CHANGELOG.md
      - name: Update CHANGELOG and prepare release notes
        run: |
          release_notes=$(./zeed unify --template keepachangelog --aline "## \[Unreleased" --bline "## \[" --flush)
          echo "$release_notes" > ${{ env.TEMPFILE }}
      - name: Remove zeed binary
        run: rm ./zeed
      - name: Commit changes, add release tag and push
        run: |
          SEMANTIC_VERSION=$(echo "${{ env.RELEASE_TAG }}" | sed 's/^v//')
          git add ${{ env.CHANGELOG_FILE }} .zeed
          git commit -m "Finalize release ${{ env.RELEASE_TAG }}"
          git tag -a -m "Version ${SEMANTIC_VERSION}" ${{ env.RELEASE_TAG }} HEAD
          git push origin ${{ env.RELEASE_TAG }}
          git push origin HEAD:${{ env.RELEASE_BRANCH }}
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --release-notes=${{ env.TEMPFILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}